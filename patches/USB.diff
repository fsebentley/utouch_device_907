diff --git a/frameworks/base/services/java/com/android/server/usb/UsbDeviceManager.java b/frameworks/base/services/java/com/android/server/usb/UsbDeviceManager.java
--- a/frameworks/base/services/java/com/android/server/usb/UsbDeviceManager.java
+++ b/frameworks/base/services/java/com/android/server/usb/UsbDeviceManager.java
@@ -46,6 +46,7 @@
 import android.provider.Settings;
 import android.util.Pair;
 import android.util.Slog;
+import android.os.PowerManager;

 import com.android.internal.annotations.GuardedBy;

@@ -118,6 +119,9 @@
     private String[] mAccessoryStrings;
     private UsbDebuggingManager mDebuggingManager;

+    private PowerManager.WakeLock wl;
+    private int wlref = 0;
+
     private class AdbSettingsObserver extends ContentObserver {
         public AdbSettingsObserver() {
             super(null);
@@ -165,6 +169,9 @@ public UsbDeviceManager(Context context) {

         readOemUsbOverrideConfig();

+        PowerManager power = (PowerManager) mContext.getSystemService(Context.POWER_SERVICE);
+        wl = power.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, TAG);
+
         // create a thread for our Handler
         HandlerThread thread = new HandlerThread("UsbDeviceManager",
                 Process.THREAD_PRIORITY_BACKGROUND);
@@ -242,6 +249,23 @@ private void startAccessoryMode() {
         }
     }

+    /* In usb device connected to pc host, we should create a partial wakelock to prevent go to standby*/
+    private void enableWakeLock(boolean enable){
+        if(enable){
+            Slog.d(TAG, "enable "+ TAG +" wakelock"+" wlref = "+ wlref);            
+            if(wlref==0){
+                wlref++;
+                wl.acquire();
+            }            
+        }else{
+            Slog.d(TAG, "disable "+ TAG +" wakelock"+" wlref = "+ wlref);              
+            if(wlref==1){
+                wl.release();
+                wlref--;
+            }
+        }
+    }
+
     private static void initRndisAddress() {
         // configure RNDIS ethernet address based on our serial number using the same algorithm
         // we had been previously using in kernel board files
@@ -621,6 +645,7 @@ public void handleMessage(Message msg) {
                 case MSG_UPDATE_STATE:
                     mConnected = (msg.arg1 == 1);
                     mConfigured = (msg.arg2 == 1);
+                    enableWakeLock(mConnected);
                     updateUsbNotification();
                     updateAdbNotification();
                     if (containsFunction(mCurrentFunctions,
